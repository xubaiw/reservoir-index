import SciLean.Basic
import SciLean.Tactic

namespace SciLean

variable {Œ± Œ≤ Œ≥ : Type}
variable {X Y Z : Type} [Hilbert X] [Hilbert Y] [Hilbert Z]
variable {Œπ Œ∫ : Type} [Enumtype Œπ] [Enumtype Œ∫]

variable {n : Nat} [NonZero n]

-- set_option trace.Meta.Tactic.simp.rewrite true in
example (y : X)
  : 
    ‚àá (Œª x : X => 2 * ‚ü™x,x‚ü´) = Œª x : X => (2 : ‚Ñù) * ((2 : ‚Ñù) * x)
  := by autograd done

example (g : Œπ ‚Üí ‚Ñù) 
  : 
    ‚àá (Œª (f : Œπ ‚Üí ‚Ñù) => ‚àë i, f i) g 
    = 
    (Œª _ => (1 : ‚Ñù)) 
  := by autograd done

set_option synthInstance.maxHeartbeats 500 in
set_option maxHeartbeats 8000 in
example 
  : ‚àá (Œª (f : Fin n ‚Üí ‚Ñù) => ‚àë i, (f (i + 1))*(f i))
    = 
    (Œª (f : Fin n ‚Üí ‚Ñù) i => f (i - 1) + f (i + 1)) 
  := 
by 
  autograd done

set_option synthInstance.maxHeartbeats 700 in
set_option maxHeartbeats 11000 in
example 
  : ‚àá (Œª (f : ‚Ñù^n) => ‚àë i, f[i + 1]*f[i])
    = 
    Œª (f : ‚Ñù^n) => PowType.intro Œª i => f[i - 1] + f[i + 1]
  := 
by 
  autograd done


example {X} [Hilbert X] (x : X) 
  : 
    ‚àá (Œª x : X => ‚à•x‚à•¬≤) x = (2 : ‚Ñù) * x 
  := 
by autograd simp[AtomicSmoothFun.df] done

-- set_option synthInstance.maxHeartbeats 1000 in
example (g : Fin n ‚Üí ‚Ñù)
  : 
    ‚àá (Œª (f : Fin n ‚Üí ‚Ñù) => ‚àë i, ‚ü™(f (i + 1) - f i), (f (i + 1) - f i)‚ü´) g 
    = 
    (Œª i => (2 : ‚Ñù) * (g (i - 1 + 1) - g (i - 1) - (g (i + 1) - g i))) 
  := 
by
  autograd done


-- Too slow with `x : (‚Ñù^(3:‚Ñï))^n
example (l : Fin n ‚Üí ‚Ñù)
  : ‚àá (Œª (x : Fin n ‚Üí Fin 3 ‚Üí ‚Ñù) => ‚àë i, ‚à• ‚à•x i  - x (i-1)‚à•¬≤ - (l i)^2‚à•¬≤)
    =
    (fun (x : Fin n ‚Üí Fin 3 ‚Üí ‚Ñù) =>
      (2:‚Ñù) * fun j =>
        (‚à•x j - x (j - 1)‚à•¬≤ - l j ^ 2) * ((2:‚Ñù) * (x j - x (j - 1))) -
        (‚à•x (j + 1) - x (j + 1 - 1)‚à•¬≤ - l (j + 1) ^ 2) * ((2:‚Ñù) * (x (j + 1) - x (j + 1 - 1))))
  := by autograd done


-- set_option trace.Meta.Tactic.simp.rewrite true in
set_option synthInstance.maxSize 256 in
example
  : ‚àá (Œª x : Fin n ‚Üí Fin 3 ‚Üí ‚Ñù => ‚àë i j, ‚à•x i - x j‚à•¬≤)
    = 
    0
   -- (fun x => (2:‚Ñù) * ((fun j => (n:‚Ñù) * x j - fun j => sum fun i => x i j) - fun j => (fun j => sum fun i => x i j) - (n:‚Ñù) * x j))
 := by
   autograd    -- I was unable to typecheck the rhs, so we are just checking if `autograd` terminates on this
   admit

set_option trace.Meta.Tactic.simp true in
example
  : ùìë (Œª x : Fin n ‚Üí Fin 3 ‚Üí ‚Ñù => ‚àë i j, ‚à•x i - x j‚à•¬≤)
    = 
    0
 := by
   simp    -- I was unable to typecheck the rhs, so we are just checking if `autograd` terminates on this
   admit


-- set_option synthInstance.maxHeartbeats 1000
-- example (g : Œπ ‚Üí ‚Ñù) 
--   : 
--     ‚àá (Œª (f : Œπ ‚Üí ‚Ñù) => ‚àë i, (42 : ‚Ñù) * f i) g 
--     = 
--     (Œª _ => (42 : ‚Ñù)) 
--   := by autograd done

-- example (g : Œπ ‚Üí ‚Ñù) 
--   : 
--     ‚àá (Œª (f : Œπ ‚Üí ‚Ñù) => ‚àë i, (f i)*(f i)) g = (2 : ‚Ñù) * g 
--   := 
-- by autograd; done


example : Œ¥ (Œª x : ‚Ñù^n => ‚àë i, x[i]) = Œª x dx => ‚àë i, dx[i] := by simp done
example : Œ¥ (Œª x : ‚Ñù^n => ‚àë i, 2*x[i]) = Œª x dx => ‚àë i, (2:‚Ñù)*dx[i] := by simp done
example : Œ¥ (Œª x : ‚Ñù^n => (‚àë i, x[i]*x[i])) = Œª x dx => (‚àë i, dx[i]*x[i]) + (‚àë i, x[i]*dx[i]) := by simp done
example : ‚àá (Œª x : ‚Ñù^n => ‚àë i, x[i]) = Œª x => PowType.intro (Œª i => (1:‚Ñù)) := by autograd done
example : ‚àá (Œª x : ‚Ñù^n => ‚àë i, x[i]*x[i]) = Œª x : ‚Ñù^n => (2:‚Ñù)*x := by autograd admit -- not quite there, not sure what to do about this case

  --   example : ‚àá (Œª x => ‚àë i, x[i]*x[i-a]) x = ((lmk Œª i => x[i-a]) + (lmk Œª i => x[i+a])) := by autograd done
  --   -- example : ‚àá (Œª x => ‚àë i, (x[i+a] - x[i])*(x[i+a] - x[i])) x = 0 := by autograd done -- Needs some more sophisticated simplifications

    -- variable {n : Nat} [NonZero n] (a : Fin n)

    -- example : ‚àá (Œª (f : Fin n ‚Üí ‚Ñù) => ‚àë i, (f (i+a) - f i)*(f (i+a) - f i)) 
    --           = 
    --           (Œª (f : Fin n ‚Üí ‚Ñù) i => 2 * (f (i - a + a) - f (i - a) - (f (i + a) - f i))) := by autograd done
  --   example (c : ‚Ñù) : ‚àá (Œª (f : Fin n ‚Üí ‚Ñù) => ‚àë i, c*(f i)*(f i)) = (Œª (f : Fin n ‚Üí ‚Ñù) => (2:‚Ñù)*c*f) := by autograd done
