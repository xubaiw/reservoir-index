SimpleSwitchMorph subclass: #LOCell	instanceVariableNames: 'mouseAction'	classVariableNames: ''	package: 'PBE-LightsOut'!!LOCell methodsFor: 'initialization' stamp: 'MichalWallace 4/1/2021 18:04'!initialize	super initialize.	self label: ''.	self borderWidth: 2.	bounds := 0 @ 0 corner: 64 @ 64.	offColor := Color paleYellow.	onColor := Color paleBlue darker.	self useSquareCorners.	self turnOff! !BorderedMorph subclass: #LOGame	instanceVariableNames: 'cells'	classVariableNames: ''	package: 'PBE-LightsOut'!!LOGame methodsFor: 'as yet unclassified' stamp: 'MichalWallace 4/1/2021 17:41'!cellsPerSide	^ 5! !!LOGame methodsFor: 'as yet unclassified' stamp: 'MichalWallace 4/1/2021 18:38'!newCellAt: p	| c origin x y |	x := p x.	y := p y.	origin := self innerBounds origin.	c := LOCell new.	c position: ((x-1) * c width) @ ((y-1)* c height) + origin.	"target: callback takes the new value, but we don't need it"	c target: [ :_ | self toggleNeighbors: p ]; actionSelector: #value:.	self addMorph: c.	^ c! !!LOGame methodsFor: 'initialization' stamp: 'MichalWallace 4/1/2021 17:57'!initialize 	| sampleCell width height n |	super initialize.	n := self cellsPerSide.	sampleCell := LOCell new.	width := sampleCell width.	height := sampleCell height.	self bounds: (5@5 extent: (width*n) @ (height * n) + (2*self borderWidth)).	cells := Array2D new: n tabulate: [ :i :j | self newCellAt: i@j ]! !!LOGame methodsFor: 'accessing' stamp: 'MichalWallace 4/1/2021 18:32'!toggleAt: p  |c|  c := cells at: (p x) at: (p y) ifInvalid: #outside.  c = #outside ifFalse: [ c toggleState ]! !!LOGame methodsFor: 'accessing' stamp: 'MichalWallace 4/1/2021 18:38'!toggleNeighbors: p  "toggle neighbors of cell p. We don't need to toggle p itself because SimpleSwitchMorph already did so."  self    toggleAt: p + (0@(-1));    toggleAt: p + ((-1)@0);    toggleAt: p + (0 @ 1);    toggleAt: p + (1 @ 0).! !