/-
Copyright (c) 2021 Anatole Dedecker. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Anatole Dedecker
-/
import Mathbin.Topology.ContinuousOn

/-!
# Left and right continuity

In this file we prove a few lemmas about left and right continuous functions:

* `continuous_within_at_Ioi_iff_Ici`: two definitions of right continuity
  (with `(a, ‚àû)` and with `[a, ‚àû)`) are equivalent;
* `continuous_within_at_Iio_iff_Iic`: two definitions of left continuity
  (with `(-‚àû, a)` and with `(-‚àû, a]`) are equivalent;
* `continuous_at_iff_continuous_left_right`, `continuous_at_iff_continuous_left'_right'` :
  a function is continuous at `a` if and only if it is left and right continuous at `a`.

## Tags

left continuous, right continuous
-/


open Set Filter

open TopologicalSpace

section PartialOrder‚Çì

variable {Œ± Œ≤ : Type _} [TopologicalSpace Œ±] [PartialOrder‚Çì Œ±] [TopologicalSpace Œ≤]

theorem continuous_within_at_Ioi_iff_Ici {a : Œ±} {f : Œ± ‚Üí Œ≤} :
    ContinuousWithinAt f (Ioi a) a ‚Üî ContinuousWithinAt f (Ici a) a := by
  simp only [‚Üê Ici_diff_left, continuous_within_at_diff_self]

theorem continuous_within_at_Iio_iff_Iic {a : Œ±} {f : Œ± ‚Üí Œ≤} :
    ContinuousWithinAt f (Iio a) a ‚Üî ContinuousWithinAt f (Iic a) a :=
  @continuous_within_at_Ioi_iff_Ici Œ±·µí·µà _ ‚ÄπTopologicalSpace Œ±‚Ä∫ _ _ _ f

end PartialOrder‚Çì

variable {Œ± Œ≤ : Type _} [TopologicalSpace Œ±] [LinearOrder‚Çì Œ±] [TopologicalSpace Œ≤]

theorem nhds_left_sup_nhds_right (a : Œ±) : ùìù[‚â§] a‚äîùìù[‚â•] a = ùìù a := by
  rw [‚Üê nhds_within_union, Iic_union_Ici, nhds_within_univ]

theorem nhds_left'_sup_nhds_right (a : Œ±) : ùìù[<] a‚äîùìù[‚â•] a = ùìù a := by
  rw [‚Üê nhds_within_union, Iio_union_Ici, nhds_within_univ]

theorem nhds_left_sup_nhds_right' (a : Œ±) : ùìù[‚â§] a‚äîùìù[>] a = ùìù a := by
  rw [‚Üê nhds_within_union, Iic_union_Ioi, nhds_within_univ]

theorem continuous_at_iff_continuous_left_right {a : Œ±} {f : Œ± ‚Üí Œ≤} :
    ContinuousAt f a ‚Üî ContinuousWithinAt f (Iic a) a ‚àß ContinuousWithinAt f (Ici a) a := by
  simp only [ContinuousWithinAt, ContinuousAt, ‚Üê tendsto_sup, nhds_left_sup_nhds_right]

theorem continuous_at_iff_continuous_left'_right' {a : Œ±} {f : Œ± ‚Üí Œ≤} :
    ContinuousAt f a ‚Üî ContinuousWithinAt f (Iio a) a ‚àß ContinuousWithinAt f (Ioi a) a := by
  rw [continuous_within_at_Ioi_iff_Ici, continuous_within_at_Iio_iff_Iic, continuous_at_iff_continuous_left_right]

